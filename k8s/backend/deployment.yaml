apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: animal-farm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: init-db-dir
        image: busybox
        securityContext:
          runAsUser: 0
        command:
        - sh
        - -c
        - |
          mkdir -p /app/data
          touch /app/data/db.sqlite
          chown -R 1000:1000 /app/data
          chmod -R 777 /app/data
          ls -la /app/data
        volumeMounts:
        - name: data
          mountPath: /app/data
      containers:
      - name: backend
        image: us.gcr.io/smart-axis-451707-h1/animal-farm-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: backend-config
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        volumeMounts:
        - name: data
          mountPath: /app/data
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: backend-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: animal-farm
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "backend-config"}'
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
  selector:
    app: backend
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: backend-config
  namespace: animal-farm
spec:
  healthCheck:
    checkIntervalSec: 15
    timeoutSec: 5
    healthyThreshold: 1
    unhealthyThreshold: 2
    type: HTTP
    requestPath: /api/health
    port: 3000 